// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0-rc.1
// 	protoc        v3.19.0
// source: caserver.proto

package pb

import (
	context "context"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Sign struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   string `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	PublicKey string `protobuf:"bytes,2,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Sign      []byte `protobuf:"bytes,3,opt,name=sign,proto3" json:"sign,omitempty"`
	Nonce     string `protobuf:"bytes,5,opt,name=nonce,proto3" json:"nonce,omitempty"`
}

func (x *Sign) Reset() {
	*x = Sign{}
	if protoimpl.UnsafeEnabled {
		mi := &file_caserver_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Sign) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Sign) ProtoMessage() {}

func (x *Sign) ProtoReflect() protoreflect.Message {
	mi := &file_caserver_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Sign.ProtoReflect.Descriptor instead.
func (*Sign) Descriptor() ([]byte, []int) {
	return file_caserver_proto_rawDescGZIP(), []int{0}
}

func (x *Sign) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *Sign) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *Sign) GetSign() []byte {
	if x != nil {
		return x.Sign
	}
	return nil
}

func (x *Sign) GetNonce() string {
	if x != nil {
		return x.Nonce
	}
	return ""
}

type EnrollNetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logid   string `protobuf:"bytes,1,opt,name=logid,proto3" json:"logid,omitempty"`
	Sign    *Sign  `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`
	Address string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Net     string `protobuf:"bytes,4,opt,name=net,proto3" json:"net,omitempty"`
	Crypto  string `protobuf:"bytes,5,opt,name=crypto,proto3" json:"crypto,omitempty"`
}

func (x *EnrollNetRequest) Reset() {
	*x = EnrollNetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_caserver_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnrollNetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollNetRequest) ProtoMessage() {}

func (x *EnrollNetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_caserver_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollNetRequest.ProtoReflect.Descriptor instead.
func (*EnrollNetRequest) Descriptor() ([]byte, []int) {
	return file_caserver_proto_rawDescGZIP(), []int{1}
}

func (x *EnrollNetRequest) GetLogid() string {
	if x != nil {
		return x.Logid
	}
	return ""
}

func (x *EnrollNetRequest) GetSign() *Sign {
	if x != nil {
		return x.Sign
	}
	return nil
}

func (x *EnrollNetRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *EnrollNetRequest) GetNet() string {
	if x != nil {
		return x.Net
	}
	return ""
}

func (x *EnrollNetRequest) GetCrypto() string {
	if x != nil {
		return x.Crypto
	}
	return ""
}

type EnrollNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logid        string `protobuf:"bytes,1,opt,name=logid,proto3" json:"logid,omitempty"`
	Sign         *Sign  `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`
	Address      string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Net          string `protobuf:"bytes,4,opt,name=net,proto3" json:"net,omitempty"`
	AdminAddress string `protobuf:"bytes,5,opt,name=adminAddress,proto3" json:"adminAddress,omitempty"`
}

func (x *EnrollNodeRequest) Reset() {
	*x = EnrollNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_caserver_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnrollNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollNodeRequest) ProtoMessage() {}

func (x *EnrollNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_caserver_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollNodeRequest.ProtoReflect.Descriptor instead.
func (*EnrollNodeRequest) Descriptor() ([]byte, []int) {
	return file_caserver_proto_rawDescGZIP(), []int{2}
}

func (x *EnrollNodeRequest) GetLogid() string {
	if x != nil {
		return x.Logid
	}
	return ""
}

func (x *EnrollNodeRequest) GetSign() *Sign {
	if x != nil {
		return x.Sign
	}
	return nil
}

func (x *EnrollNodeRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *EnrollNodeRequest) GetNet() string {
	if x != nil {
		return x.Net
	}
	return ""
}

func (x *EnrollNodeRequest) GetAdminAddress() string {
	if x != nil {
		return x.AdminAddress
	}
	return ""
}

type EnrollResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logid string `protobuf:"bytes,1,opt,name=logid,proto3" json:"logid,omitempty"`
}

func (x *EnrollResponse) Reset() {
	*x = EnrollResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_caserver_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnrollResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnrollResponse) ProtoMessage() {}

func (x *EnrollResponse) ProtoReflect() protoreflect.Message {
	mi := &file_caserver_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnrollResponse.ProtoReflect.Descriptor instead.
func (*EnrollResponse) Descriptor() ([]byte, []int) {
	return file_caserver_proto_rawDescGZIP(), []int{3}
}

func (x *EnrollResponse) GetLogid() string {
	if x != nil {
		return x.Logid
	}
	return ""
}

// The request message of  Get Current Cert
type CurrentCertRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logid   string `protobuf:"bytes,1,opt,name=logid,proto3" json:"logid,omitempty"`
	Sign    *Sign  `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`
	Net     string `protobuf:"bytes,3,opt,name=net,proto3" json:"net,omitempty"`
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *CurrentCertRequest) Reset() {
	*x = CurrentCertRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_caserver_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentCertRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentCertRequest) ProtoMessage() {}

func (x *CurrentCertRequest) ProtoReflect() protoreflect.Message {
	mi := &file_caserver_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentCertRequest.ProtoReflect.Descriptor instead.
func (*CurrentCertRequest) Descriptor() ([]byte, []int) {
	return file_caserver_proto_rawDescGZIP(), []int{4}
}

func (x *CurrentCertRequest) GetLogid() string {
	if x != nil {
		return x.Logid
	}
	return ""
}

func (x *CurrentCertRequest) GetSign() *Sign {
	if x != nil {
		return x.Sign
	}
	return nil
}

func (x *CurrentCertRequest) GetNet() string {
	if x != nil {
		return x.Net
	}
	return ""
}

func (x *CurrentCertRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type CurrentCertResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logid        string `protobuf:"bytes,1,opt,name=logid,proto3" json:"logid,omitempty"`
	CaCert       string `protobuf:"bytes,2,opt,name=caCert,proto3" json:"caCert,omitempty"`
	Cert         string `protobuf:"bytes,3,opt,name=cert,proto3" json:"cert,omitempty"`
	PrivateKey   string `protobuf:"bytes,4,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	NodeHdPriKey string `protobuf:"bytes,5,opt,name=nodeHdPriKey,proto3" json:"nodeHdPriKey,omitempty"`
}

func (x *CurrentCertResponse) Reset() {
	*x = CurrentCertResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_caserver_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CurrentCertResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentCertResponse) ProtoMessage() {}

func (x *CurrentCertResponse) ProtoReflect() protoreflect.Message {
	mi := &file_caserver_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentCertResponse.ProtoReflect.Descriptor instead.
func (*CurrentCertResponse) Descriptor() ([]byte, []int) {
	return file_caserver_proto_rawDescGZIP(), []int{5}
}

func (x *CurrentCertResponse) GetLogid() string {
	if x != nil {
		return x.Logid
	}
	return ""
}

func (x *CurrentCertResponse) GetCaCert() string {
	if x != nil {
		return x.CaCert
	}
	return ""
}

func (x *CurrentCertResponse) GetCert() string {
	if x != nil {
		return x.Cert
	}
	return ""
}

func (x *CurrentCertResponse) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

func (x *CurrentCertResponse) GetNodeHdPriKey() string {
	if x != nil {
		return x.NodeHdPriKey
	}
	return ""
}

type RevokeListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logid     string `protobuf:"bytes,1,opt,name=logid,proto3" json:"logid,omitempty"`
	Sign      *Sign  `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`
	Net       string `protobuf:"bytes,3,opt,name=net,proto3" json:"net,omitempty"`
	SerialNum string `protobuf:"bytes,4,opt,name=serial_num,json=serialNum,proto3" json:"serial_num,omitempty"`
}

func (x *RevokeListRequest) Reset() {
	*x = RevokeListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_caserver_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeListRequest) ProtoMessage() {}

func (x *RevokeListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_caserver_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeListRequest.ProtoReflect.Descriptor instead.
func (*RevokeListRequest) Descriptor() ([]byte, []int) {
	return file_caserver_proto_rawDescGZIP(), []int{6}
}

func (x *RevokeListRequest) GetLogid() string {
	if x != nil {
		return x.Logid
	}
	return ""
}

func (x *RevokeListRequest) GetSign() *Sign {
	if x != nil {
		return x.Sign
	}
	return nil
}

func (x *RevokeListRequest) GetNet() string {
	if x != nil {
		return x.Net
	}
	return ""
}

func (x *RevokeListRequest) GetSerialNum() string {
	if x != nil {
		return x.SerialNum
	}
	return ""
}

type RevokeListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logid string        `protobuf:"bytes,1,opt,name=logid,proto3" json:"logid,omitempty"`
	List  []*RevokeNode `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *RevokeListResponse) Reset() {
	*x = RevokeListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_caserver_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeListResponse) ProtoMessage() {}

func (x *RevokeListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_caserver_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeListResponse.ProtoReflect.Descriptor instead.
func (*RevokeListResponse) Descriptor() ([]byte, []int) {
	return file_caserver_proto_rawDescGZIP(), []int{7}
}

func (x *RevokeListResponse) GetLogid() string {
	if x != nil {
		return x.Logid
	}
	return ""
}

func (x *RevokeListResponse) GetList() []*RevokeNode {
	if x != nil {
		return x.List
	}
	return nil
}

type RevokeNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	SerialNum  string `protobuf:"bytes,2,opt,name=serialNum,proto3" json:"serialNum,omitempty"`
	CreateTime int64  `protobuf:"varint,3,opt,name=createTime,proto3" json:"createTime,omitempty"`
	Address    string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
	PublicKey  string `protobuf:"bytes,5,opt,name=publicKey,proto3" json:"publicKey,omitempty"`
	Sign       []byte `protobuf:"bytes,6,opt,name=sign,proto3" json:"sign,omitempty"`
}

func (x *RevokeNode) Reset() {
	*x = RevokeNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_caserver_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeNode) ProtoMessage() {}

func (x *RevokeNode) ProtoReflect() protoreflect.Message {
	mi := &file_caserver_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeNode.ProtoReflect.Descriptor instead.
func (*RevokeNode) Descriptor() ([]byte, []int) {
	return file_caserver_proto_rawDescGZIP(), []int{8}
}

func (x *RevokeNode) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *RevokeNode) GetSerialNum() string {
	if x != nil {
		return x.SerialNum
	}
	return ""
}

func (x *RevokeNode) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *RevokeNode) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *RevokeNode) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *RevokeNode) GetSign() []byte {
	if x != nil {
		return x.Sign
	}
	return nil
}

type RevokeNodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logid   string `protobuf:"bytes,1,opt,name=logid,proto3" json:"logid,omitempty"`
	Sign    *Sign  `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`
	Net     string `protobuf:"bytes,3,opt,name=net,proto3" json:"net,omitempty"`
	Address string `protobuf:"bytes,4,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *RevokeNodeRequest) Reset() {
	*x = RevokeNodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_caserver_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeNodeRequest) ProtoMessage() {}

func (x *RevokeNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_caserver_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeNodeRequest.ProtoReflect.Descriptor instead.
func (*RevokeNodeRequest) Descriptor() ([]byte, []int) {
	return file_caserver_proto_rawDescGZIP(), []int{9}
}

func (x *RevokeNodeRequest) GetLogid() string {
	if x != nil {
		return x.Logid
	}
	return ""
}

func (x *RevokeNodeRequest) GetSign() *Sign {
	if x != nil {
		return x.Sign
	}
	return nil
}

func (x *RevokeNodeRequest) GetNet() string {
	if x != nil {
		return x.Net
	}
	return ""
}

func (x *RevokeNodeRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type RevokeNodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logid string `protobuf:"bytes,1,opt,name=logid,proto3" json:"logid,omitempty"`
}

func (x *RevokeNodeResponse) Reset() {
	*x = RevokeNodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_caserver_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RevokeNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeNodeResponse) ProtoMessage() {}

func (x *RevokeNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_caserver_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeNodeResponse.ProtoReflect.Descriptor instead.
func (*RevokeNodeResponse) Descriptor() ([]byte, []int) {
	return file_caserver_proto_rawDescGZIP(), []int{10}
}

func (x *RevokeNodeResponse) GetLogid() string {
	if x != nil {
		return x.Logid
	}
	return ""
}

type DecryptByHdKeyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logid         string `protobuf:"bytes,1,opt,name=logid,proto3" json:"logid,omitempty"`
	Sign          *Sign  `protobuf:"bytes,2,opt,name=sign,proto3" json:"sign,omitempty"`
	Address       string `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Net           string `protobuf:"bytes,4,opt,name=net,proto3" json:"net,omitempty"`
	ChildHdpubKey string `protobuf:"bytes,5,opt,name=childHdpubKey,proto3" json:"childHdpubKey,omitempty"`
	CypherText    string `protobuf:"bytes,6,opt,name=cypherText,proto3" json:"cypherText,omitempty"`
}

func (x *DecryptByHdKeyRequest) Reset() {
	*x = DecryptByHdKeyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_caserver_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptByHdKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptByHdKeyRequest) ProtoMessage() {}

func (x *DecryptByHdKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_caserver_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptByHdKeyRequest.ProtoReflect.Descriptor instead.
func (*DecryptByHdKeyRequest) Descriptor() ([]byte, []int) {
	return file_caserver_proto_rawDescGZIP(), []int{11}
}

func (x *DecryptByHdKeyRequest) GetLogid() string {
	if x != nil {
		return x.Logid
	}
	return ""
}

func (x *DecryptByHdKeyRequest) GetSign() *Sign {
	if x != nil {
		return x.Sign
	}
	return nil
}

func (x *DecryptByHdKeyRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DecryptByHdKeyRequest) GetNet() string {
	if x != nil {
		return x.Net
	}
	return ""
}

func (x *DecryptByHdKeyRequest) GetChildHdpubKey() string {
	if x != nil {
		return x.ChildHdpubKey
	}
	return ""
}

func (x *DecryptByHdKeyRequest) GetCypherText() string {
	if x != nil {
		return x.CypherText
	}
	return ""
}

type DecryptByHdKeyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Logid   string `protobuf:"bytes,1,opt,name=logid,proto3" json:"logid,omitempty"`
	RealMsg string `protobuf:"bytes,2,opt,name=realMsg,proto3" json:"realMsg,omitempty"`
}

func (x *DecryptByHdKeyResponse) Reset() {
	*x = DecryptByHdKeyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_caserver_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptByHdKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptByHdKeyResponse) ProtoMessage() {}

func (x *DecryptByHdKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_caserver_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptByHdKeyResponse.ProtoReflect.Descriptor instead.
func (*DecryptByHdKeyResponse) Descriptor() ([]byte, []int) {
	return file_caserver_proto_rawDescGZIP(), []int{12}
}

func (x *DecryptByHdKeyResponse) GetLogid() string {
	if x != nil {
		return x.Logid
	}
	return ""
}

func (x *DecryptByHdKeyResponse) GetRealMsg() string {
	if x != nil {
		return x.RealMsg
	}
	return ""
}

var File_caserver_proto protoreflect.FileDescriptor

var file_caserver_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x63, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x02, 0x70, 0x62, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x68, 0x0a, 0x04, 0x53, 0x69, 0x67, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64,
	0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65,
	0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b,
	0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x6f, 0x6e, 0x63, 0x65, 0x22, 0x8a, 0x01, 0x0a,
	0x10, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x4e, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52,
	0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12,
	0x10, 0x0a, 0x03, 0x6e, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x65,
	0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x63, 0x72, 0x79, 0x70, 0x74, 0x6f, 0x22, 0x97, 0x01, 0x0a, 0x11, 0x45, 0x6e,
	0x72, 0x6f, 0x6c, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x6f, 0x67, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x04, 0x73,
	0x69, 0x67, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a,
	0x03, 0x6e, 0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x65, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x22, 0x26, 0x0a, 0x0e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x64, 0x22, 0x74, 0x0a, 0x12, 0x43,
	0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52,
	0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x65, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6e, 0x65, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65,
	0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x22, 0x9b, 0x01, 0x0a, 0x13, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x06, 0x63, 0x61, 0x43, 0x65, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x61, 0x43, 0x65, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x65, 0x72, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x65, 0x72, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70,
	0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x70, 0x72, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x6e,
	0x6f, 0x64, 0x65, 0x48, 0x64, 0x50, 0x72, 0x69, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x6e, 0x6f, 0x64, 0x65, 0x48, 0x64, 0x50, 0x72, 0x69, 0x4b, 0x65, 0x79, 0x22,
	0x78, 0x0a, 0x11, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x73, 0x69,
	0x67, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69,
	0x67, 0x6e, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6e, 0x65, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x65, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x72, 0x69, 0x61, 0x6c, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x22, 0x4e, 0x0a, 0x12, 0x52, 0x65, 0x76,
	0x6f, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6c, 0x6f, 0x67, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xa6, 0x01, 0x0a, 0x0a, 0x52, 0x65,
	0x76, 0x6f, 0x6b, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x72, 0x69,
	0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x72,
	0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73,
	0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x73, 0x69,
	0x67, 0x6e, 0x22, 0x73, 0x0a, 0x11, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4e, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f, 0x67, 0x69, 0x64, 0x12, 0x1c, 0x0a,
	0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x12, 0x10, 0x0a, 0x03, 0x6e,
	0x65, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x65, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x2a, 0x0a, 0x12, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x6f, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f,
	0x67, 0x69, 0x64, 0x22, 0xbd, 0x01, 0x0a, 0x15, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x42,
	0x79, 0x48, 0x64, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x6f, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f,
	0x67, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x04, 0x73, 0x69, 0x67, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x08, 0x2e, 0x70, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x52, 0x04, 0x73, 0x69, 0x67,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x6e,
	0x65, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6e, 0x65, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x48, 0x64, 0x70, 0x75, 0x62, 0x4b, 0x65, 0x79, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x48, 0x64, 0x70, 0x75, 0x62,
	0x4b, 0x65, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x79, 0x70, 0x68, 0x65, 0x72, 0x54, 0x65, 0x78,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x79, 0x70, 0x68, 0x65, 0x72, 0x54,
	0x65, 0x78, 0x74, 0x22, 0x48, 0x0a, 0x16, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x42, 0x79,
	0x48, 0x64, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x6c, 0x6f, 0x67, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x6f,
	0x67, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x4d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x72, 0x65, 0x61, 0x6c, 0x4d, 0x73, 0x67, 0x32, 0x87, 0x04,
	0x0a, 0x08, 0x43, 0x61, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x12, 0x52, 0x0a, 0x0e, 0x4e, 0x65,
	0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x12, 0x14, 0x2e, 0x70,
	0x62, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x4e, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x16, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x10, 0x22, 0x0b,
	0x2f, 0x6e, 0x65, 0x74, 0x2f, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x3a, 0x01, 0x2a, 0x12, 0x50,
	0x0a, 0x0a, 0x4e, 0x6f, 0x64, 0x65, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x12, 0x15, 0x2e, 0x70,
	0x62, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x70, 0x62, 0x2e, 0x45, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22,
	0x0c, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x2f, 0x65, 0x6e, 0x72, 0x6f, 0x6c, 0x6c, 0x3a, 0x01, 0x2a,
	0x12, 0x5b, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x65,
	0x72, 0x74, 0x12, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43,
	0x65, 0x72, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x17, 0x2e, 0x70, 0x62, 0x2e,
	0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x65, 0x72, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x18, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x22, 0x0d, 0x2f, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x74, 0x2f, 0x63, 0x65, 0x72, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x57, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x15,
	0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b,
	0x65, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x17, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c, 0x2f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x2f, 0x6c,
	0x69, 0x73, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x54, 0x0a, 0x0a, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x43, 0x65, 0x72, 0x74, 0x12, 0x15, 0x2e, 0x70, 0x62, 0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65,
	0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x70, 0x62,
	0x2e, 0x52, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x22, 0x0c, 0x2f, 0x6e, 0x6f,
	0x64, 0x65, 0x2f, 0x72, 0x65, 0x76, 0x6f, 0x6b, 0x65, 0x3a, 0x01, 0x2a, 0x12, 0x49, 0x0a, 0x0e,
	0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x42, 0x79, 0x48, 0x64, 0x4b, 0x65, 0x79, 0x12, 0x19,
	0x2e, 0x70, 0x62, 0x2e, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x42, 0x79, 0x48, 0x64, 0x4b,
	0x65, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x70, 0x62, 0x2e, 0x44,
	0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x42, 0x79, 0x48, 0x64, 0x4b, 0x65, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x07, 0x5a, 0x05, 0x2e, 0x2e, 0x2f, 0x70, 0x62,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_caserver_proto_rawDescOnce sync.Once
	file_caserver_proto_rawDescData = file_caserver_proto_rawDesc
)

func file_caserver_proto_rawDescGZIP() []byte {
	file_caserver_proto_rawDescOnce.Do(func() {
		file_caserver_proto_rawDescData = protoimpl.X.CompressGZIP(file_caserver_proto_rawDescData)
	})
	return file_caserver_proto_rawDescData
}

var file_caserver_proto_msgTypes = make([]protoimpl.MessageInfo, 13)
var file_caserver_proto_goTypes = []interface{}{
	(*Sign)(nil),                   // 0: pb.Sign
	(*EnrollNetRequest)(nil),       // 1: pb.EnrollNetRequest
	(*EnrollNodeRequest)(nil),      // 2: pb.EnrollNodeRequest
	(*EnrollResponse)(nil),         // 3: pb.EnrollResponse
	(*CurrentCertRequest)(nil),     // 4: pb.CurrentCertRequest
	(*CurrentCertResponse)(nil),    // 5: pb.CurrentCertResponse
	(*RevokeListRequest)(nil),      // 6: pb.RevokeListRequest
	(*RevokeListResponse)(nil),     // 7: pb.RevokeListResponse
	(*RevokeNode)(nil),             // 8: pb.RevokeNode
	(*RevokeNodeRequest)(nil),      // 9: pb.RevokeNodeRequest
	(*RevokeNodeResponse)(nil),     // 10: pb.RevokeNodeResponse
	(*DecryptByHdKeyRequest)(nil),  // 11: pb.DecryptByHdKeyRequest
	(*DecryptByHdKeyResponse)(nil), // 12: pb.DecryptByHdKeyResponse
}
var file_caserver_proto_depIdxs = []int32{
	0,  // 0: pb.EnrollNetRequest.sign:type_name -> pb.Sign
	0,  // 1: pb.EnrollNodeRequest.sign:type_name -> pb.Sign
	0,  // 2: pb.CurrentCertRequest.sign:type_name -> pb.Sign
	0,  // 3: pb.RevokeListRequest.sign:type_name -> pb.Sign
	8,  // 4: pb.RevokeListResponse.list:type_name -> pb.RevokeNode
	0,  // 5: pb.RevokeNodeRequest.sign:type_name -> pb.Sign
	0,  // 6: pb.DecryptByHdKeyRequest.sign:type_name -> pb.Sign
	1,  // 7: pb.Caserver.NetAdminEnroll:input_type -> pb.EnrollNetRequest
	2,  // 8: pb.Caserver.NodeEnroll:input_type -> pb.EnrollNodeRequest
	4,  // 9: pb.Caserver.GetCurrentCert:input_type -> pb.CurrentCertRequest
	6,  // 10: pb.Caserver.GetRevokeList:input_type -> pb.RevokeListRequest
	9,  // 11: pb.Caserver.RevokeCert:input_type -> pb.RevokeNodeRequest
	11, // 12: pb.Caserver.DecryptByHdKey:input_type -> pb.DecryptByHdKeyRequest
	3,  // 13: pb.Caserver.NetAdminEnroll:output_type -> pb.EnrollResponse
	3,  // 14: pb.Caserver.NodeEnroll:output_type -> pb.EnrollResponse
	5,  // 15: pb.Caserver.GetCurrentCert:output_type -> pb.CurrentCertResponse
	7,  // 16: pb.Caserver.GetRevokeList:output_type -> pb.RevokeListResponse
	10, // 17: pb.Caserver.RevokeCert:output_type -> pb.RevokeNodeResponse
	12, // 18: pb.Caserver.DecryptByHdKey:output_type -> pb.DecryptByHdKeyResponse
	13, // [13:19] is the sub-list for method output_type
	7,  // [7:13] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_caserver_proto_init() }
func file_caserver_proto_init() {
	if File_caserver_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_caserver_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Sign); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_caserver_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnrollNetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_caserver_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnrollNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_caserver_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnrollResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_caserver_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrentCertRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_caserver_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CurrentCertResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_caserver_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_caserver_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_caserver_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_caserver_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeNodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_caserver_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RevokeNodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_caserver_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptByHdKeyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_caserver_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptByHdKeyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_caserver_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   13,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_caserver_proto_goTypes,
		DependencyIndexes: file_caserver_proto_depIdxs,
		MessageInfos:      file_caserver_proto_msgTypes,
	}.Build()
	File_caserver_proto = out.File
	file_caserver_proto_rawDesc = nil
	file_caserver_proto_goTypes = nil
	file_caserver_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CaserverClient is the client API for Caserver service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CaserverClient interface {
	// Net Admin Enroll
	NetAdminEnroll(ctx context.Context, in *EnrollNetRequest, opts ...grpc.CallOption) (*EnrollResponse, error)
	// Node Enroll
	NodeEnroll(ctx context.Context, in *EnrollNodeRequest, opts ...grpc.CallOption) (*EnrollResponse, error)
	// Get Current Cert
	GetCurrentCert(ctx context.Context, in *CurrentCertRequest, opts ...grpc.CallOption) (*CurrentCertResponse, error)
	// Get Revoke List
	GetRevokeList(ctx context.Context, in *RevokeListRequest, opts ...grpc.CallOption) (*RevokeListResponse, error)
	// Revoke a node
	RevokeCert(ctx context.Context, in *RevokeNodeRequest, opts ...grpc.CallOption) (*RevokeNodeResponse, error)
	// decryptByHdKey
	DecryptByHdKey(ctx context.Context, in *DecryptByHdKeyRequest, opts ...grpc.CallOption) (*DecryptByHdKeyResponse, error)
}

type caserverClient struct {
	cc grpc.ClientConnInterface
}

func NewCaserverClient(cc grpc.ClientConnInterface) CaserverClient {
	return &caserverClient{cc}
}

func (c *caserverClient) NetAdminEnroll(ctx context.Context, in *EnrollNetRequest, opts ...grpc.CallOption) (*EnrollResponse, error) {
	out := new(EnrollResponse)
	err := c.cc.Invoke(ctx, "/pb.Caserver/NetAdminEnroll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *caserverClient) NodeEnroll(ctx context.Context, in *EnrollNodeRequest, opts ...grpc.CallOption) (*EnrollResponse, error) {
	out := new(EnrollResponse)
	err := c.cc.Invoke(ctx, "/pb.Caserver/NodeEnroll", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *caserverClient) GetCurrentCert(ctx context.Context, in *CurrentCertRequest, opts ...grpc.CallOption) (*CurrentCertResponse, error) {
	out := new(CurrentCertResponse)
	err := c.cc.Invoke(ctx, "/pb.Caserver/GetCurrentCert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *caserverClient) GetRevokeList(ctx context.Context, in *RevokeListRequest, opts ...grpc.CallOption) (*RevokeListResponse, error) {
	out := new(RevokeListResponse)
	err := c.cc.Invoke(ctx, "/pb.Caserver/GetRevokeList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *caserverClient) RevokeCert(ctx context.Context, in *RevokeNodeRequest, opts ...grpc.CallOption) (*RevokeNodeResponse, error) {
	out := new(RevokeNodeResponse)
	err := c.cc.Invoke(ctx, "/pb.Caserver/RevokeCert", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *caserverClient) DecryptByHdKey(ctx context.Context, in *DecryptByHdKeyRequest, opts ...grpc.CallOption) (*DecryptByHdKeyResponse, error) {
	out := new(DecryptByHdKeyResponse)
	err := c.cc.Invoke(ctx, "/pb.Caserver/DecryptByHdKey", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CaserverServer is the server API for Caserver service.
type CaserverServer interface {
	// Net Admin Enroll
	NetAdminEnroll(context.Context, *EnrollNetRequest) (*EnrollResponse, error)
	// Node Enroll
	NodeEnroll(context.Context, *EnrollNodeRequest) (*EnrollResponse, error)
	// Get Current Cert
	GetCurrentCert(context.Context, *CurrentCertRequest) (*CurrentCertResponse, error)
	// Get Revoke List
	GetRevokeList(context.Context, *RevokeListRequest) (*RevokeListResponse, error)
	// Revoke a node
	RevokeCert(context.Context, *RevokeNodeRequest) (*RevokeNodeResponse, error)
	// decryptByHdKey
	DecryptByHdKey(context.Context, *DecryptByHdKeyRequest) (*DecryptByHdKeyResponse, error)
}

// UnimplementedCaserverServer can be embedded to have forward compatible implementations.
type UnimplementedCaserverServer struct {
}

func (*UnimplementedCaserverServer) NetAdminEnroll(context.Context, *EnrollNetRequest) (*EnrollResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NetAdminEnroll not implemented")
}
func (*UnimplementedCaserverServer) NodeEnroll(context.Context, *EnrollNodeRequest) (*EnrollResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NodeEnroll not implemented")
}
func (*UnimplementedCaserverServer) GetCurrentCert(context.Context, *CurrentCertRequest) (*CurrentCertResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetCurrentCert not implemented")
}
func (*UnimplementedCaserverServer) GetRevokeList(context.Context, *RevokeListRequest) (*RevokeListResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRevokeList not implemented")
}
func (*UnimplementedCaserverServer) RevokeCert(context.Context, *RevokeNodeRequest) (*RevokeNodeResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method RevokeCert not implemented")
}
func (*UnimplementedCaserverServer) DecryptByHdKey(context.Context, *DecryptByHdKeyRequest) (*DecryptByHdKeyResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DecryptByHdKey not implemented")
}

func RegisterCaserverServer(s *grpc.Server, srv CaserverServer) {
	s.RegisterService(&_Caserver_serviceDesc, srv)
}

func _Caserver_NetAdminEnroll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnrollNetRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CaserverServer).NetAdminEnroll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Caserver/NetAdminEnroll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CaserverServer).NetAdminEnroll(ctx, req.(*EnrollNetRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Caserver_NodeEnroll_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(EnrollNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CaserverServer).NodeEnroll(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Caserver/NodeEnroll",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CaserverServer).NodeEnroll(ctx, req.(*EnrollNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Caserver_GetCurrentCert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CurrentCertRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CaserverServer).GetCurrentCert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Caserver/GetCurrentCert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CaserverServer).GetCurrentCert(ctx, req.(*CurrentCertRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Caserver_GetRevokeList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CaserverServer).GetRevokeList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Caserver/GetRevokeList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CaserverServer).GetRevokeList(ctx, req.(*RevokeListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Caserver_RevokeCert_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RevokeNodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CaserverServer).RevokeCert(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Caserver/RevokeCert",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CaserverServer).RevokeCert(ctx, req.(*RevokeNodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Caserver_DecryptByHdKey_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DecryptByHdKeyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CaserverServer).DecryptByHdKey(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pb.Caserver/DecryptByHdKey",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CaserverServer).DecryptByHdKey(ctx, req.(*DecryptByHdKeyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Caserver_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pb.Caserver",
	HandlerType: (*CaserverServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NetAdminEnroll",
			Handler:    _Caserver_NetAdminEnroll_Handler,
		},
		{
			MethodName: "NodeEnroll",
			Handler:    _Caserver_NodeEnroll_Handler,
		},
		{
			MethodName: "GetCurrentCert",
			Handler:    _Caserver_GetCurrentCert_Handler,
		},
		{
			MethodName: "GetRevokeList",
			Handler:    _Caserver_GetRevokeList_Handler,
		},
		{
			MethodName: "RevokeCert",
			Handler:    _Caserver_RevokeCert_Handler,
		},
		{
			MethodName: "DecryptByHdKey",
			Handler:    _Caserver_DecryptByHdKey_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "caserver.proto",
}
